<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>更改hexo的主题为Matery,并进行初步的优化</title>
      <link href="2021/03/28/matrry/"/>
      <url>2021/03/28/matrry/</url>
      
        <content type="html"><![CDATA[<h1 id="更改hexo的主题为Matery-并进行初步的优化"><a href="#更改hexo的主题为Matery-并进行初步的优化" class="headerlink" title="更改hexo的主题为Matery,并进行初步的优化"></a>更改hexo的主题为Matery,并进行初步的优化</h1><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持 <code>emoji</code> 表情，用 <code>markdown emoji</code> 语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="1-Matery主题下载"><a href="#1-Matery主题下载" class="headerlink" title="1. Matery主题下载"></a>1. Matery主题下载</h2><p>在博客目录下使用<code>git clone</code>命令来进行下载,主题有两个版本，稳定版本和最新版本 (不定期更新优化)，自主选择版本。</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/blinkfox/hexo-theme-matery themes/matery     # 稳定版git clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery   #最新版(不定期进行优化更新)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果下载速度较慢的话可以去作者的码云仓库进行<a href="https://gitee.com/yafine66/hexo-theme-matery">下载</a></p><h2 id="2-Matery主题配置"><a href="#2-Matery主题配置" class="headerlink" title="2. Matery主题配置"></a>2. Matery主题配置</h2><h3 id="2-1-更换主题为Matery"><a href="#2-1-更换主题为Matery" class="headerlink" title="2.1 更换主题为Matery"></a>2.1 更换主题为Matery</h3><div class="uk-alert uk-alert-warning"><i class="fa fa-exclamation-circle"></i> 注意：博客目录下有两个配置文件，一个是站点配置文件，另一个则是主题配置文件。</div><p>例如我的博客文件在 <code>E:\blog</code> 下，那么站点配置文件就是 <code>E:\blog\_config.yml</code>，主题配置文件就是 <code>E:\blog\themes\matery\_config.yml</code>。后面会专门提到配置文件的格式问题，很多时候报错是配置文件的格式问题</p><p>主题下载完成后，将站点配置文件中的 <code>theme</code> 值修改为你下载主题的文件名，此处为 <code>matery</code>，那么值就修改为 <code>theme: matery</code>。</p><h3 id="2-2-新建标签-tags-页面"><a href="#2-2-新建标签-tags-页面" class="headerlink" title="2.2 新建标签 tags 页面"></a>2.2 新建标签 tags 页面</h3><p><code>tags</code> 是用来展示标签的，在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> ，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "tags"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">title: tagsdate: 2018-09-30 18:23:38type: "tags"layout: "tags"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-新建分类categories-页面"><a href="#2-3-新建分类categories-页面" class="headerlink" title="2.3 新建分类categories 页面"></a>2.3 新建分类categories 页面</h3><p><code>categories</code> 是用来展示标签的，在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> ，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "categories"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-新建about页面"><a href="#2-4-新建about页面" class="headerlink" title="2.4 新建about页面"></a>2.4 新建about页面</h3><p>命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "about"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑index文件，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">title: aboutdate: 2018-09-30 17:25:30type: "about"layout: "about"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-新建留言板-contact-页面-可选"><a href="#2-5-新建留言板-contact-页面-可选" class="headerlink" title="2.5 新建留言板 contact 页面 (可选)"></a>2.5 新建留言板 contact 页面 (可选)</h3><p>命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "contact"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑index文件，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">title: contactdate: 2018-09-30 17:25:30type: "contact"layout: "contact"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="uk-alert uk-alert-warning"><i class="fa fa-exclamation-circle"></i> **注** ：本留言板功能依赖于第三方评论系统，请 **激活** 你的评论系统才有效果。并且在主题的 `_config.yml` 文件中，第 `19` 至 `21` 行的 “ **菜单** ” 配置，取消关于留言板的注释即可。后面我会提到详细的教程。</div><h3 id="2-6-新建友情链接-friends-页面-可选"><a href="#2-6-新建友情链接-friends-页面-可选" class="headerlink" title="2.6 新建友情链接 friends 页面 (可选)"></a>2.6 新建友情链接 friends 页面 (可选)</h3><p>命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "friends"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑index文件，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">title: friendsdate: 2018-12-12 21:25:30type: "friends"layout: "friends"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[{    "avatar": "http://image.luokangyuan.com/1_qq_27922023.jpg",    "name": "码酱",    "introduction": "我不是大佬，只是在追寻大佬的脚步",    "url": "http://luokangyuan.com/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/4027734.jpeg",    "name": "闪烁之狐",    "introduction": "编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬",    "url": "https://blinkfox.github.io/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/avatar.jpg",    "name": "ja_rome",    "introduction": "平凡的脚步也可以走出伟大的行程",    "url": "https://me.csdn.net/jlh912008548",    "title": "前去学习"}]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-8-菜单导航配置"><a href="#2-8-菜单导航配置" class="headerlink" title="2.8 菜单导航配置"></a>2.8 菜单导航配置</h3><p>打开主题配置文件</p><p><strong>1.</strong> 菜单导航名称可以是中文也可以是英文</p><p><strong>2.</strong> icon表示菜单栏选项的图标，如果不喜欢默认的可以在<a href="https://fontawesome.com/icons">Font Awesome</a>中查找自己喜欢的图标将名称按默认格式复制过来即可</p><p><strong>3.</strong> 二级菜单配置方法</p><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作：</p><ul><li>在需要添加二级菜单的一级菜单下添加 <code>children</code> 关键字 (如:<code>About</code> 菜单下添加 <code>children</code>)</li><li>在 <code>children</code> 下创建二级菜单的 名称 name, 路径 url 和图标 icon.</li><li>注意每个二级菜单模块前要加 <code>-</code>.</li><li>注意缩进格式</li></ul><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 切记一定要注意缩进的格式否则会引起报错</div><p>这里以我自己的为例</p><pre class="line-numbers language-none"><code class="language-none">menu:  Index:    url: /    icon: fas fa-home  文章:    url: /archives    icon: fas fa-align-justify    children:       - name: 分类        url: /categories        icon: fas fa-feather-alt      - name: 标签        url: /tags        icon: fas fa-equals      - name: 归档        url: /archives        icon: fas fa-folder-minus  留言:    url: /contact    icon: fas fa-comment-dots  我:    url:     icon: fas fa-anchor    children:      - name: 关于        url: /about        icon: fas fa-user-circle      - name: 其他    #这是新添加的，在原有配置基础上添加        url: /aboutme        icon: fa fa-user-secret  友人站:    url: /friends    icon: fas fa-paperclip  媒体:    url: /    icon: fas fa-list    children:       - name: 电影        url: /movies        icon: fas fa-film      - name: 书单        url: /books        icon: fas fa-book      - name: 游戏        url: /games        icon: fas fa-gamepad  ArtiTalk:     url: /ArtiTalk    icon: fas fa-comments  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果需要自己定义新的菜单导航，可以参照2.2~2.6步骤进行新建，然后修改各导航下url后为你新建的文件夹名称即可。</p><h3 id="2-9-添加-emoji-表情支持（可选的）"><a href="#2-9-添加-emoji-表情支持（可选的）" class="headerlink" title="2.9 添加 emoji 表情支持（可选的）"></a>2.9 添加 emoji 表情支持（可选的）</h3><p>Matery主题新增了对 <code>emoji</code> 表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code> 表情的生成，把对应的 <code>markdown emoji</code> 语法（<code>::</code>, 例如：<code>:smile:</code>）转变成会跳跃的 <code>emoji</code> 表情，安装命令如下</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 博客根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用 <code>emoji</code> 语法写的表情了。</p><h3 id="2-10-代码高亮"><a href="#2-10-代码高亮" class="headerlink" title="2.10 代码高亮"></a>2.10 代码高亮</h3><p>由于我自己使用<a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来进行代码高亮会报错</p><p>所以以hexo自带的代码高亮来进行设置</p><p>修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight</code>为如下设置；</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: false  line_number: false  auto_detect: true  tab_replace: ''  wrap: false  hljs: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这里开启行数显示会被挡住看不到，还没找到原因，所以这里关闭了。</p><h3 id="2-11-搜索"><a href="#2-11-搜索" class="headerlink" title="2.11 搜索"></a>2.11 搜索</h3><p>这里使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在博客根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-12-中文链接转拼音（可选的）"><a href="#2-12-中文链接转拼音（可选的）" class="headerlink" title="2.12 中文链接转拼音（可选的）"></a>2.12 中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>在博客根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">permalink_pinyin:  enable: true  separator: '-' # default: '-'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-13-文章字数统计插件（可选的）"><a href="#2-13-文章字数统计插件（可选的）" class="headerlink" title="2.13 文章字数统计插件（可选的）"></a>2.13 文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a> 插件。</p><p>安装命令如下：</p><pre class="line-numbers language-none"><code class="language-none">Codenpm i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class="line-numbers language-none"><code class="language-none">CodewordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-13-添加-RSS-订阅支持（可选的）"><a href="#2-13-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.13 添加 RSS 订阅支持（可选的）"></a>2.13 添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-none"><code class="language-none">Codenpm install hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: ' '  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="2-14-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-14-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a>2.14 添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中</p><h3 id="2-15-添加-Tidio-在线聊天功能（可选的）"><a href="#2-15-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a>2.15 添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="2-16-修改页脚"><a href="#2-16-修改页脚" class="headerlink" title="2.16 修改页脚"></a>2.16 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="2-17-修改社交链接"><a href="#2-17-修改社交链接" class="headerlink" title="2.17 修改社交链接"></a>2.17 修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.socialLink.github) { %&gt;    &lt;a href="&lt;%= theme.socialLink.github %&gt;" class="tooltipped" target="_blank" data-tooltip="访问我的GitHub" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-github"&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><h3 id="2-18-修改打赏的二维码图片"><a href="#2-18-修改打赏的二维码图片" class="headerlink" title="2.18 修改打赏的二维码图片"></a>2.18 修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="2-19-配置音乐播放器（可选的）"><a href="#2-19-配置音乐播放器（可选的）" class="headerlink" title="2.19 配置音乐播放器（可选的）"></a>2.19 配置音乐播放器（可选的）</h3><pre class="line-numbers language-none"><code class="language-none"># 是否在首页显示音乐music:  enable: true  title:            #非吸底模式有效    enable: true    show: 听听音乐  server: netease   #require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 503838841     #require song id / playlist id / album id / search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: '#42b983'  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> `server` 可选 `netease`（网易云音乐），`tencent`（QQ 音乐），`kugou`（酷狗音乐），`xiami`（虾米音乐），`baidu`（百度音乐）。`type` 可选 `song`（歌曲），`playlist`（歌单），`album`（专辑），`search`（搜索关键字），`artist`（歌手）`id` 获取示例：浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，`playlist` 的 `id` 即为这串数字</div><h2 id="3-文章-Front-matter-介绍"><a href="#3-文章-Front-matter-介绍" class="headerlink" title="3. 文章 Front-matter 介绍"></a>3. 文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床 (腾讯云、七牛云、又拍云等) 来做图片的路径。如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code> 版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code> 版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> <br>1. 如果 `img` 属性不填写的话，文章特色图会根据文章标题的 `hashcode` 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图**各有特色**。<br>2. `date` 的值尽量保证每篇文章是唯一的，因为本主题中 `Gitalk` 和 `Gitment` 识别 `id` 是通过 `date` 的值来作为唯一标识的。<br>3. 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 `_config.yml` 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：[开源中国在线工具](http://tool.oschina.net/encrypt?type=2)、[chahuo](http://encode.chahuo.com/)、[站长工具](http://tool.chinaz.com/tools/hash.aspx)。<br>4. 您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则<br></div><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-none"><code class="language-none">Code---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-自定制修改"><a href="#4-自定制修改" class="headerlink" title="4. 自定制修改"></a>4. 自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="4-1-修改主题颜色"><a href="#4-1-修改主题颜色" class="headerlink" title="4.1 修改主题颜色"></a>4.1 修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-none"><code class="language-none">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);}/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/@-webkit-keyframes rainbow {   /* 动态切换背景颜色. */}@keyframes rainbow {    /* 动态切换背景颜色. */}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-修改-banner-图和文章特色图"><a href="#4-2-修改-banner-图和文章特色图" class="headerlink" title="4.2 修改 banner 图和文章特色图"></a>4.2 修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 `` 代码中：</p><pre class="line-numbers language-none"><code class="language-none">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-3-修改网站相关信息"><a href="#4-3-修改网站相关信息" class="headerlink" title="4.3 修改网站相关信息"></a>4.3 修改网站相关信息</h3><p>以下站点配置文件选项可自行修改</p><p><code>title:</code>表示网页在标签页上显示的名称</p><p><code> subtitle:</code>网页首页上居中显示的标题</p><p><code>language:</code>网页语言显示类型 <code>zh-CN</code>表示更改为中文</p><p><code>url:</code>网站的网址</p><p><code>index_generator</code>选项下有一个<code>per-page</code> 表示每页显示的文章数量 这里建议修改为6的倍数即可</p><p><strong>注意：</strong></p><p>网站打字效果副标题默认有两个，即 <code>sub1</code> 和 <code>sub2</code>，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在 <code>sub1</code> 和 <code>sub2</code> 后面继续添加即可，然后在去主题目录下的 <code>layout</code> 文件夹下的<code>_partial</code> 文件夹，修改 <code>bg-cover-content.ejs</code> 文件，大约在 12 行左右，如下面所示：</p><pre class="line-numbers language-none"><code class="language-none"> &lt;div class="description center-align"&gt;     &lt;% if (theme.subtitle.enable) { %&gt;         &lt;span id="subtitle"&gt;&lt;/span&gt;         &lt;script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"&gt;&lt;/script&gt;        &lt;script&gt;            var typed = new Typed("#subtitle", {                strings: ['&lt;%= theme.subtitle.sub1 %&gt;',                          '&lt;%= theme.subtitle.sub2 %&gt;',                          '&lt;%= theme.subtitle.sub3 %&gt;',                          '&lt;%= theme.subtitle.sub4 %&gt;',                          '&lt;%= theme.subtitle.sub5 %&gt;',                          '&lt;%= theme.subtitle.sub6 %&gt;'],                 startDelay: &lt;%= theme.subtitle.startDelay %&gt;,                 typeSpeed: &lt;%= theme.subtitle.typeSpeed %&gt;,                 loop: &lt;%= theme.subtitle.loop %&gt;,                    backSpeed: &lt;%= theme.subtitle.backSpeed %&gt;,                 showCursor: &lt;%= theme.subtitle.showCursor %&gt;              });          &lt;/script&gt;      &lt;% } else { %&gt;            &lt;%= config.description %&gt;      &lt;% } %&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>1.</strong> 社交链接的修改</p><p>默认的配置信息为：</p><pre class="line-numbers language-none"><code class="language-none"># 首页 banner 中的第二行个人信息配置，留空即不启用socialLink:  github:  https://github.com/juxiaoshuai  email: 1819126377@qq.com  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  qq: 1819126377  weibo:  https://www.weibo.com/u/5591476574  zhihu: # https://www.zhihu.com/xxx  rss: true # true、false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、其他一些-DIY-可选"><a href="#5、其他一些-DIY-可选" class="headerlink" title="5、其他一些 DIY (可选)"></a>5、其他一些 DIY (可选)</h2><h3 id="5-1-修改导航栏颜色以及透明效果"><a href="#5-1-修改导航栏颜色以及透明效果" class="headerlink" title="5.1 修改导航栏颜色以及透明效果"></a>5.1 修改导航栏颜色以及透明效果</h3><p>打开 <code>themes/matery/source/css/matery.css</code> 文件，大约在 250 行，有一个<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><pre class="line-numbers language-none"><code class="language-none">.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值    opacity: 0.8;  //透明效果 值范围 0~1，看情况自己修改}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-添加天气小插件"><a href="#5-2-添加天气小插件" class="headerlink" title="5.2 添加天气小插件"></a>5.2 添加天气小插件</h3><p>首先去中国天气<a href="https://cj.weather.com.cn/plugin/pc">官网：</a>，配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到 <code>themes/matery/layout/layout.ejs</code> 即可。</p><h3 id="5-3-豆瓣书单电影页面"><a href="#5-3-豆瓣书单电影页面" class="headerlink" title="5.3 豆瓣书单电影页面"></a>5.3 豆瓣书单电影页面</h3><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注意：首先需要检查你的 hexo 版本是多少，在你的博客目录下执行命令 hexo -v 即可，这个豆瓣插件需要的版本需要 &lt; 4.2.0，否则会出现 bug，比如点击书单的在读，想读或者已读会出现一个新的弹出页面，解决办法就是降低 hexo 的版本，先卸载目前的 hexo 版本，再安装 4.0.0 版本的 hexo 即可，我的版本为 4.0.0。</div><pre class="line-numbers language-none"><code class="language-none">npm uninstall hexonpm install hexo@4.0.0 -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>1.</strong> 首先在博客站点目录执行下面的命令安装豆瓣插件：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-douban --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>2.</strong> 在站点目录配置文件下，添加如下配置：</p><pre class="line-numbers language-none"><code class="language-none">douban:   user: 252345665    #这个需要修改为你个人的id    builtin: false   #如果想生成豆瓣页面，这个需要设置为true  book:     title: 'This is my book title'     quote: 'This is my book quote'   movie:     title: 'This is my movie title'     quote: 'This is my movie quote'   game:     title: 'This is my game title'     quote: 'This is my game quote'   timeout: 10000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.</strong> 然后再主题配置文件<code>_config.yml</code> 中添加关于此页面的菜单：(下面是我的配置)</p><pre class="line-numbers language-none"><code class="language-none">menu:    媒体:       url: /       icon: fas fa-list       children:         - name: 电影           url: /movies           icon: fas fa-film         - name: 书单           url: /books           icon: fas fa-book         - name: 游戏           url: /games           icon: fas fa-gamepad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>4.</strong> 适配 Matery 主题：在 <code>/themes/hexo-theme-matery/layout</code> 文件夹下面创建一个名为 <code>douban.ejs</code> 的文件，并将下面的内容复制进去：</p><pre class="line-numbers language-none"><code class="language-none">&lt;%- partial('_partial/post-cover') %&gt; &lt;style&gt;     .hexo-douban-picture img {        width: 100%;     } &lt;/style&gt;&lt;main class="content"&gt;     &lt;div id="contact" class="container chip-container"&gt;         &lt;div class="card"&gt;             &lt;div class="card-content" style="padding: 30px"&gt;                 &lt;h1 style="margin: 10px 0 10px 0px;"&gt;&lt;%= page.title %&gt;&lt;/h1&gt;                 &lt;%- page.content %&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class="card"&gt;             &lt;div class="card-content" style="text-align: center"&gt;                 &lt;h3 style="margin: 5px 0 5px 5px;"&gt;如果你有好的内容推荐，欢迎在下面留言！&lt;/h3&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class="card"&gt;             &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) { %&gt;                &lt;%- partial('_partial/gitalk') %&gt;            &lt;% } %&gt;             &lt;% if (theme.gitment.enable) { %&gt;                 &lt;%- partial('_partial/gitment') %&gt;             &lt;% } %&gt;             &lt;% if (theme.disqus.enable) { %&gt;                 &lt;%- partial('_partial/disqus') %&gt;             &lt;% } %&gt;             &lt;% if (theme.livere &amp;&amp; theme.livere.enable) { %&gt;                 &lt;%- partial('_partial/livere') %&gt;             &lt;% } %&gt;             &lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;                 &lt;%- partial('_partial/valine') %&gt;             &lt;% } %&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/main&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>5.</strong> 然后在博客站点目录下的 <code>node_modules</code> 文件夹下找到 <code>hexo-douban/lib</code>，文件夹下有三个 js 文件，分别为：<code>books-generator.js</code> 、<code>games-generator.js</code> 、<code>movies-generator.js</code>，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</p><pre class="line-numbers language-none"><code class="language-none">/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/layout: [`page`, `douban`]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>6.</strong> 最后就是使用并生成相应的页面，执行命令如下:</p><pre class="line-numbers language-none"><code class="language-none">hexo douban<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-4-外链跳转插件"><a href="#5-4-外链跳转插件" class="headerlink" title="5.4  外链跳转插件"></a>5.4  外链跳转插件</h3><p>使用 npm 或者 yarn 安装</p><pre class="line-numbers language-none"><code class="language-none">## npm 安装npm install hexo-external-link --save## yarn 安装yarn add hexo-external-link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后在博客站点根目录下添加如下配置：</p><pre class="line-numbers language-none"><code class="language-none">hexo_external_link:  enable: true  enable_base64_encode: true  url_param_name: 'u'  html_file_name: 'go.html'  target_blank: true  link_rel: 'external nofollow noopener noreferrer'  domain: 'your_domain' # 如果开启了防盗链，填写你的域名  safety_chain: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-5-添加动态科技线条背景"><a href="#5-5-添加动态科技线条背景" class="headerlink" title="5.5  添加动态科技线条背景"></a>5.5  添加动态科技线条背景</h3><p>在 <code>themes/matery/layout/layout.ejs</code> 文件中添加如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--动态线条背景--&gt;&lt;script type="text/javascript"color="122 103 238" opacity='0.7' zIndex="-2" count="200" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>color：表示线条颜色，三个数字分别为 (R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的 z-index 属性，css 属性用于控制所在层的位置，默认：-1</li></ul><h3 id="5-6-添加鼠标彩虹星星掉落跟随效果"><a href="#5-6-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="5.6 添加鼠标彩虹星星掉落跟随效果"></a>5.6 添加鼠标彩虹星星掉落跟随效果</h3><p>在 <code>themes/matery/source/js</code> 目录下新建 <code>cursor.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/cursor.js">传送门</a>，将内容复制粘贴到 cursor.js 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre class="line-numbers language-none"><code class="language-none">&lt;script src="/js/cursor.js"&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-7-添加自定义页面"><a href="#5-7-添加自定义页面" class="headerlink" title="5.7  添加自定义页面"></a>5.7  添加自定义页面</h3><p>首先在站点目录下的 source 文件夹下新建 <code>aboutme</code> 文件，文件名可自定义，然后编写一个 <code>index.html</code> 放入 <code>aboutme</code> 文件夹下，然后在主题配置文件下的导航配置信息添加下面的配置：</p><pre class="line-numbers language-none"><code class="language-none">About:    url: /    icon: fas fa-address-card    children:      - name: 关于我        url: /about        icon: fas fa-user-circle      - name: Another    #这是新添加的，在原有配置基础上添加        url: /aboutme        icon: fa fa-user-secret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在站点配置文件下，找到 <code>skip_render</code>，在后面添加属性，如下：</p><pre class="line-numbers language-none"><code class="language-none">skip_render: aboutme/**  # 其意思为在对文件进行渲染时跳过aboutme文件下的所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>知道方法后，你可以添加你自己想要添加的页面，让你的博客内容更加充实。</p><h3 id="5-8-添加-404-页面"><a href="#5-8-添加-404-页面" class="headerlink" title="5.8 添加 404 页面"></a>5.8 添加 404 页面</h3><p>首先再站点根目录下的 source 文件夹下新建 <code>404.md</code> 文件，里面内容如下</p><pre class="line-numbers language-none"><code class="language-none">---title: 404date: 2019-10-28 16:41:10type: "404"layout: "404"description: "Oops～，我崩溃了！找不到你想要的页面了"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>紧接着再新建主题文件夹的 layout 目录下新建 <code>404.ejs</code> 文件，添加内容如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;style type="text/css"&gt;    /* don't remove. */    .about-cover {        height: 90.2vh;    }&lt;/style&gt;&lt;div class="bg-cover pd-header about-cover"&gt;    &lt;div class="container"&gt;        &lt;div class="row"&gt;            &lt;div class="col s10 offset-s1 m8 offset-m2 l8 offset-l2"&gt;                &lt;div class="brand"&gt;                    &lt;div class="title center-align"&gt;                        404                    &lt;/div&gt;                    &lt;div class="description center-align"&gt;                        &lt;%= page.description %&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script&gt;    // 每天切换 banner 图.  Switch banner image every day.    $('.bg-cover').css('background-image', 'url(https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/medias/banner/' + new Date().getDay() + '.jpg)');&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-9-添加-Valine-评论系统"><a href="#5-9-添加-Valine-评论系统" class="headerlink" title="5.9 添加 Valine 评论系统"></a>5.9 添加 Valine 评论系统</h3><p><a href="https://valine.js.org/">Valine 官方文档</a></p><p>如果注册过 LeanCloud，请点击此处进行<a href="https://leancloud.cn/dashboard/login.html#/signin">登录</a>，未注册的请点击<a href="https://leancloud.cn/dashboard/login.html#/signup">注册</a></p><p>经过登录或者注册之后再登录，就会进入如下的页面：</p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115145855.png"><p>创建应用完成后，会出现如下页面，然后点击设置</p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150319.png"><p>会出现下面的页面，将其中 APPID 和 APPKey 复制，添加到配置文件中。</p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150641.png"><pre class="line-numbers language-none"><code class="language-none"># The configuration of the Valine comment module is not activated by default.# To use it, activate the configuration item and set appId and appKey.# Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: false  # true即为开启评论系统  appId:   #此处填写你的appid  appKey:  #此处填写你的appkey  notify: false  verify: false  visitor: true  avatar: 'mm' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: 'just go go' # Comment Box placeholder  background:  https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.1/social/comment_bg.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行相关部署命令，查看效果即可。</p><h3 id="5-10-图片懒加载"><a href="#5-10-图片懒加载" class="headerlink" title="5.10 图片懒加载"></a>5.10 图片懒加载</h3><p>在站点根目录执行下面的命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class="line-numbers language-none"><code class="language-none">lazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg ./images/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 就可以看到效果了。</p><h3 id="5-11-直达评论按钮"><a href="#5-11-直达评论按钮" class="headerlink" title="5.11 直达评论按钮"></a>5.11 直达评论按钮</h3><p><strong>1.</strong> 新建文件<code>themes\Matery\layout\_partial\back-comment.ejs</code>,粘贴如下代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- 直达评论 --&gt;&lt;div id="to_comment" class="comment-scroll"&gt;    &lt;a class="btn-floating btn-large waves-effect waves-light" href="#vcomments" title="直达评论"&gt;        &lt;i class="fas fa-comments"&gt;&lt;/i&gt;    &lt;/a&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这里评论是valine，直接填写的valine的id——<code>href="#vcomments"</code>,如果是其他评论，对应修改即可</p><p><strong>2.</strong> 在<code>themes\Matery\layout\_partial\valine.ejs</code>文末添加一条，引用第一步的内容；</p><pre class="line-numbers language-none"><code class="language-none">&lt;%- partial('_partial/back-comment.ejs') %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加样式在<code>themes\Matery\source\css\matery.css</code>添加内容如下：</p><pre class="line-numbers language-none"><code class="language-none">/*直达评论按钮样式*/.comment-scroll {    position: fixed;    right: 15px;    bottom: 135px;    padding-top: 15px;    margin-bottom: 0;    z-index: 998;}.comment-scroll .btn-floating {    background: linear-gradient(to bottom right, #FF9999 0%, #ff6666 100%);    width: 48px;    height: 48px;}.comment-scroll .btn-floating i {    line-height: 48px;    font-size: 1.8rem;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-11-修改滑动条"><a href="#5-11-修改滑动条" class="headerlink" title="5.11 修改滑动条"></a>5.11 修改滑动条</h3><p>在<code>themes\Matery\source\css\matery.css</code>样式添加如下：</p><pre class="line-numbers language-none"><code class="language-none">/* 滚动条 */::-webkit-scrollbar-thumb {    background-color: #FF2A68;    background-image: -webkit-linear-gradient(45deg,rgba(255,255,255,.4) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.4) 50%,rgba(255,255,255,.4) 75%,transparent 75%,transparent);    border-radius: 3em;}::-webkit-scrollbar-track {    background-color: #ffcacaff;    border-radius: 3em;}::-webkit-scrollbar {    width: 8px;    height: 15px;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-12-在hexo中使用思维导图"><a href="#5-12-在hexo中使用思维导图" class="headerlink" title="5.12 在hexo中使用思维导图"></a>5.12 在hexo中使用思维导图</h3><p><strong>1.</strong> 执行 <code>npm install hexo-simple-mindmap</code> 安装插件。</p><p><strong>2.</strong> 写新文章时，在需要脑图的地方，按以下格式添加内容。插件会自动将 <code>pullquote</code> 中包裹的内容按照层级顺序渲染成脑图</p><pre class="line-numbers language-none"><code class="language-none">{% pullquote mindmap mindmap-md %}- [Hexo 的思维导图插件](https://hunterx.xyz/hexo-simple-mindmap-plugin-intro.html)  - 前言  - 使用方法    - 一    - 二    - 三  - 太长不看  - 参考资料{% endpullquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote class="pullquote mindmap mindmap-md"><ul><li><a href="https://hunterx.xyz/hexo-simple-mindmap-plugin-intro.html">Hexo 的思维导图插件</a><ul><li>前言</li><li>使用方法<ul><li>一</li><li>二</li><li>三</li></ul></li><li>太长不看</li><li>参考资料</li></ul></li></ul></blockquote><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo搭建一个属于自己的博客并部署到Github和Coding</title>
      <link href="2021/02/27/hexo-da-jian-bo-ke/"/>
      <url>2021/02/27/hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="使用hexo搭建一个属于自己的博客并部署到Github和Coding"><a href="#使用hexo搭建一个属于自己的博客并部署到Github和Coding" class="headerlink" title="使用hexo搭建一个属于自己的博客并部署到Github和Coding"></a>使用hexo搭建一个属于自己的博客并部署到Github和Coding</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git</p><p>电脑系统为window 10专业版，64位</p><h2 id="1-搭建基本环境"><a href="#1-搭建基本环境" class="headerlink" title="1.搭建基本环境"></a>1.搭建基本环境</h2><h3 id="1-1安装Git"><a href="#1-1安装Git" class="headerlink" title="1.1安装Git"></a>1.1安装Git</h3><p>到git官网上<a href="https://gitforwindows.org/">下载</a>,Download Git<br>然后一路点下一步，进行默认配置的安装</p><h3 id="1-2安装Node-js"><a href="#1-2安装Node-js" class="headerlink" title="1.2安装Node.js"></a>1.2安装Node.js</h3><p>Node.js<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">官网</a>同理下载，进行默认配置的安装。<br>安装完成后,检查安装是否正确，Win➕r输入cmd并打开，依次输入 node -v、npm -v 和 git –version 并回车，出现程序版本号即可。</p><h2 id="2-本地搭建Hexo博客"><a href="#2-本地搭建Hexo博客" class="headerlink" title="2.本地搭建Hexo博客"></a>2.本地搭建Hexo博客</h2><p>本地新建一个文件夹用来存放你的Hexo程序和你的博客文件，这里我以我的文件夹Blog为例。打开次文件夹，右键&gt;选择Git Bash Here，然后进行接下来的操作</p><h3 id="2-1安装Hexo"><a href="#2-1安装Hexo" class="headerlink" title="2.1安装Hexo"></a>2.1安装Hexo</h3><p>在Git命令行下输入以下内容</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>耐心等待安装完成，安装过程可能有点慢，安装完成提示如下图</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng1.png"><h3 id="2-2初始化Hexo"><a href="#2-2初始化Hexo" class="headerlink" title="2.2初始化Hexo"></a>2.2初始化Hexo</h3><p>安装完成后进行初始化Hexo,依次输入以下命令</p><pre class="line-numbers language-none"><code class="language-none">hexo init      # 初始化npm install    # 安装组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>成功后文件夹截图如下：</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng2.png"><h3 id="2-3Hexo本地预览"><a href="#2-3Hexo本地预览" class="headerlink" title="2.3Hexo本地预览"></a>2.3Hexo本地预览</h3><p>完成上一步后进行初步本地预览，以此输入以下命令</p><pre class="line-numbers language-none"><code class="language-none">hexo g   # 生成页面hexo s   # 启动预览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>成功后在浏览器输入<br><a href="http://localhost:4000/">http://localhost:4000</a><br>出现以下Hexo默认界面表示本地博客安装成功了</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng3.png"><p>恭喜你迈出了第一步这很关键！</p><p>如果加载不出来提示端口被占用，Control+c关闭窗口重新打开后，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p><h2 id="3-将博客部署到Github和Coding-可选"><a href="#3-将博客部署到Github和Coding-可选" class="headerlink" title="3.将博客部署到Github和Coding(可选)"></a>3.将博客部署到Github和Coding(可选)</h2><h3 id="3-1注册账号"><a href="#3-1注册账号" class="headerlink" title="3.1注册账号"></a>3.1注册账号</h3><p>1.使用邮箱注册 <a href="https://github.com/">GitHub</a> 账户，选择免费账户，并完成邮件验证。</p><p>2.（可选）进入Coding<a href="https://coding.net/">官网</a>并注册一个团队和一个账户。</p><h3 id="3-2创建Github仓库"><a href="#3-2创建Github仓库" class="headerlink" title="3.2创建Github仓库"></a>3.2创建Github仓库</h3><p>GitHub 主页右上角加号 -&gt; New repository：</p><p>Repository name 中输入 <code>用户名.github.io</code>（这里仓库名字一定要和你的用户名相同 切记切记）</p><p>勾选 “Initialize this repository with a README”</p><p>后点击 Create repository 进行创建。</p><p>创建后你的博客地址为：<code>https://用户名.github.io</code>但是此时还没有内容，所以访问是404界面</p><h3 id="3-3创建Coding项目"><a href="#3-3创建Coding项目" class="headerlink" title="3.3创建Coding项目"></a>3.3创建Coding项目</h3><p>点击新建项目&gt; 选择Devops托管项目</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng4.png"><p>填写项目名称 项目表示会自动生成 &gt;点击完成创建</p><p>进入项目后左面列表&gt;代码仓库&gt;新建仓库</p><p>填写如下</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng5.png"><p>此处为了方便我也填写了和Github相同的名称 &gt;完成创建。</p><h3 id="3-4部署-Hexo-到-GitHub-和-Coding"><a href="#3-4部署-Hexo-到-GitHub-和-Coding" class="headerlink" title="3.4部署 Hexo 到 GitHub 和 Coding"></a>3.4部署 Hexo 到 GitHub 和 Coding</h3><p>首先要选择连接方式  这里我推荐ssh秘钥链接  并以此为例进行演示</p><p><strong>生成秘钥</strong></p><p>在桌面右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name "GitHub 用户名"git config --global user.email "GitHub 邮箱"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>创建 SSH 秘钥</strong>：</p><p>输入 <code>ssh-keygen -t rsa -C "GitHub 邮箱"</code>，然后一路回车。（应该是三次回车 记不太得了）</p><p><strong>添加秘钥：</strong></p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的秘钥内容到 Key 中，点击 Add SSH key 完成添加。</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng6.png"><p><strong>验证连接：</strong></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p><strong>Coding添加方式</strong></p><p>同理刚才生成的ssh也可用于coding的连接</p><p>代码仓库&gt;设置&gt;部署公钥&gt;新建部署公钥</p><img src="/medias/loading.gif" data-original="https://liblog-1305080594.cos.ap-nanjing.myqcloud.com/jiaocheng7.png"><p>建议勾选永久有效</p><p><strong>验证coding连接</strong></p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@git.coding.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同上输入yes回车确认</p><p><strong>Git部署插件</strong></p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>修改配置文件</strong></p><p>进入Blog根目录 打开_config.yml文件 拉到最下面修改部署配置</p><pre class="line-numbers language-none"><code class="language-none">deploy: type: git  repo:  github: git@github.com:你的用户名/你的用户名.github.io.git,master  coding: git@e.coding.net:用户名/项目名称/项目名称.git,master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果coding地址不确定可以去代码仓库设置界面进行复制</p><p>保存后终端执行</p><pre class="line-numbers language-none"><code class="language-none">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>开启 Coding Pages</strong></p><p>新版的coding需要手动开启静态托管</p><p>进入项目&gt;持续部署&gt;网站托管   这里需要实名认证</p><p>实名认证之后右上  新建网站&gt;静态网站 填写网站名称 节点选择香港可以不用备案</p><p>等待部署成功后就可以进行访问了 点击部署上方箭头可以查看部署的博客网址自己进行绑定域名操作</p><h3 id="3-4进行访问"><a href="#3-4进行访问" class="headerlink" title="3.4进行访问"></a>3.4进行访问</h3><p>这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code></p><p>和coding分配的域名 就可以看到 Hexo 网站了。</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
